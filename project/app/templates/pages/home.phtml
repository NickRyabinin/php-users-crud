<div class="container">
  <h2>О приложении</h2>
  <div>
    <p>Простой REST-like CRUD одной сущности "user" по паттерну MVC в парадигме ООП.
    Реализованы регистрация, аутентификация, просмотр своего профиля с возможностью изменения учётных
    данных и аватара для обычных пользователей и полный CRUD для авторизованных администраторов.</p>

    <p>Используемый в development-версии стек: HTML, CSS, PHP, PostgreSQL, JavaScript (совсем чуть-чуть),
    Docker, Docker Compose, Nginx, php-fpm.
    Без фреймворков.</p>

    <p>Структурно приложение состоит из модели, представления, контроллеров (базового, сущности "user", аутентификации,
    контроллера отображения простой текстовой страницы) и обвязки: singleton-класса подключения к БД через PDO, роутера,
    промежуточного middleware-слоя контроля авторизации, обработчиков Request и Response, а также вспомогательных классов:
    валидатора, логгера ошибок, генератора капчи, класса для работы с файлами (нужен для взаимодействия с загружаемыми
    пользователями изображениями-аватарами), класса для установки и извлечения flash-сообщений.</p>

    <p>Параметры подключения к БД хранятся в файле .env в корне проекта, либо считываются из переменной окружения
    DATABASE_URL (production-версия). В случае наличия файла .env он имеет приоритет.
    При подключении к БД выполняется простая миграция, описываемая в файле src/migrations/migration.sql .
    Важное примечание: так как отдельный режим обслуживания приложения не реализован, эта миграция выполняется
    при каждом подключении к БД, что накладывает ограничение на действия, прописанные в migration.sql</p>

    <p>Существующие маршруты описываются в файле src/routes.php. Для каждого маршрута можно указать обязательность
    проверки на аутентификацию и авторизацию.</p>

    <p>Визуальное отображение реализовано наиболее простым способом, как вставка разных .phtml шаблонов, содержащих
    html-разметку с вкраплениями php-кода, в единственный макет. Стили - в файле styles/style.css. Нормальной адаптивности
    приложение не имеет, только стандартный flex.</p>

    <p>Приложение не имеет отдельного файла конфигурации, но некоторые важные параметры можно отредактировать, изменив
    значения "говорящих" констант в файле index.php (единой точке входа в приложение). В частности, можно поменять
    максимальное число неудачных попыток аутентификации пользователем в рамках одной сессии, а также время блокировки
    этого пользователя, в случае превышения лимита попыток. (Впрочем, так как эти ограничения реализованы через массив
    $_SESSION, а не через запись в БД, то практической пользы имеют мало).</p>

    <p>Код приложения проверен линтером и статическим анализатором и формальных ошибок не имеет. Это, впрочем, не отменяет
    того факта, что приложение имеет недоработки и спорные технические решения, поэтому - "as is".</p>
  </div>
</div>